@model IEnumerable<NoteMarketPlace.Models.NoteDetailsViewModel>
@{
    if (@Session["UserEmailId"] != null)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_NonRegisteredUserLayout.cshtml";
    }
    var i = new NoteMarketPlace.Models.NoteDetailsViewModel();

}
@using NoteMarketPlace.Models;



<!-- Search notes image section -->
<section id="search-page-image">

    <!-- Search image -->
    <div id="search-title-image">

        <div class="search-title">
            <h2>Search Notes</h2>
        </div>

    </div>

</section>

<!-- Search Filter -->
<section id="search-filter">

    <div class="container">

        <!-- Heading -->
        <div class="row">

            <div class="col-lg-12 col-md-12 col-sm-12 col-12">

                <div class="search-heading">
                    <h4><b>Search and Filter Notes</b></h4>
                    @*@ViewBag.search
        @ViewBag.uni*@
                </div>

            </div>

        </div>



        <!--Filter Content -->
        <div id="filter-content">
            @using (Html.BeginForm("SearchNotes", "User", FormMethod.Get, new { @id = "showNote" }))
            {
                <!-- Search bar -->
                <div class="search-bar">

                    <div class="row">

                        <div class="col-md-12 col-sm-12 col-12 search-wrapper">
                            <img src="~/Content/images/Dashboard/search.jpg" alt="search">
                            <input type="search" class="form-control" id="searchbar" placeholder="Search notes here..." name="textbox" value="@Request.QueryString["textbox"]">
                            @*<input type="submit" hidden/>*@

                        </div>

                    </div>

                </div>

            @*}
            

            using (Html.BeginForm("SearchNotes", "User", FormMethod.Post, new { @id = "filterOfNote" }))
            {*@
                <!--Filter-->
                <div class="row">



                    <!-- Type -->
                    <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="wrapper">
                            @*@Html.DropDownListFor(m => i.typeDetails.TypeName, ViewBag.TypeList as SelectList, "Select Type", new { @id = "inputgender", @class = "form-control typeDrop", @name = "typeOfNote", @value = "Request.QueryString['typeOfNote']" })*@
                            @Html.DropDownList("typeOfNote", ViewBag.TypeList as SelectList, "Select Type", new { @id = "inputgender", @class = "form-control typeDrop", @name = "typeOfNote", @value = "Request.QueryString['typeOfNote']", @onchange = "FilterOfNote()" })
                            <img src="~/Content/images/User-Profile/down-arrow.png" alt="dropdown">
                        </div>
                    </div>

                    <!-- Category -->
                    <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="wrapper">
                            @*@Html.DropDownListFor(m => i.categoryDetails.CategoryName, ViewBag.CategoryList as SelectList, "Select Category", new { @id = "inputgender", @class = "form-control categoryDrop" })*@
                            @Html.DropDownList("categoryOfNote", ViewBag.CategoryList as SelectList, "Select Category", new { @id = "inputgender", @class = "form-control categoryDrop" , @name = "categoryOfNote", @value = "Request.QueryString['categoryOfNote']", @onchange = "FilterOfNote()" })
                            <img src="~/Content/images/User-Profile/down-arrow.png" alt="dropdown">
                        </div>
                    </div>

                    <!-- University , onchange = "this.form.submit()" -->
                    <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="wrapper">
                        @*Html.DropDownList("instituteOfNote", ViewBag.UniversityList as SelectList, "Select university", new
                        {
                           @id = "inputgender",
                           @class = "form-control universityDrop",
                           @name = "instituteOfNote",
                           @value = "Request.QueryString['instituteOfNote']",
                           @onchange = "FilterOfNote()"
                        })*@
                            @Html.DropDownList("instituteOfNote", new SelectList(ViewBag.UniversityList), "Select university", new {
                           @id = "inputgender",
                           @class = "form-control universityDrop",
                           @name = "instituteOfNote",
                           @value = "Request.QueryString['instituteOfNote']",
                           @onchange = "FilterOfNote()"
                       })
                            <img src="~/Content/images/User-Profile/down-arrow.png" alt="dropdown">
                        </div>
                    </div>

                    <!-- Course -->
                    <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="wrapper">
                        @*@Html.DropDownListFor(m => i.noteDetails.CourseName, ViewBag.CourseList as SelectList, "Select Course", new { @id = "inputgender", @class = "form-control courseDrop" })*@
                        @Html.DropDownList("courseOfNote",new SelectList(ViewBag.CourseList), "Select Course", new
                           {
                               @id = "inputgender",
                               @class = "form-control courseDrop" ,
                               @name = "courseOfNote",
                               @value = "Request.QueryString['courseOfNote']",
                               @onchange = "FilterOfNote()"
                           })
                            <img src="~/Content/images/User-Profile/down-arrow.png" alt="dropdown">
                        </div>
                    </div>

                    <!-- Country -->
                    <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="wrapper">
                            @*@Html.DropDownListFor(m => i.countryDetails.CountryName, ViewBag.CountyList as SelectList, "Select Country", new { @id = "inputgender", @class = "form-control countryDrop", @name = "countryDrop" })*@
                            @Html.DropDownList("countryNote", ViewBag.CountyList as SelectList, "Select Country", new
                           {
                               @id = "inputgender",
                               @class = "form-control courseDrop",
                               @name = "countryNote",
                               @value = "Request.QueryString['countryNote']",
                               @onchange = "FilterOfNote()"
                           })
                            <img src="~/Content/images/User-Profile/down-arrow.png" alt="dropdown">

                        </div>
                    </div>

                    <!-- Rating -->
                    <div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="wrapper">
                            @*@Html.DropDownListFor(m => i.ratingsDetails.Ratings, ViewBag.RatingList as SelectList, "Select Rating", new { @id = "inputgender", @class = "form-control ratingDrop" })*@
                            @Html.DropDownList("rateOfNote",  new SelectList(ViewBag.RatingList), "Select Rating", new
                       {
                           @id = "inputgender",
                           @class = "form-control courseDrop",
                           @name = "rateOfNote",
                           @value = "Request.QueryString['rateOfNote']",
                           @onchange = "FilterOfNote()"
                       })
                            <img src="~/Content/images/User-Profile/down-arrow.png" alt="dropdown">
                        </div>
                    </div>



                </div>
            }
        </div>


    </div>

</section>

<!-- Search Result -->
<section id="search-result">

    <div class="container">

        <!-- Heading -->
        <div class="row">

            <div class="col-md-12">

                <div class="search-heading">

                    @{
                        if (Model.Count() == 0)
                        {
                            <h4><b>No Record Found</b></h4>
                        }
                        else
                        {
                            <h4><b>Total @Model.Count() notes </b></h4>
                        }
                    }
                </div>

            </div>

        </div>

        <!-- Books Result -->
        <div id="book-result">

            <div class="row">
                @foreach (NoteMarketPlace.Models.NoteDetailsViewModel item in (IEnumerable<NoteMarketPlace.Models.NoteDetailsViewModel>)ViewData.Model)
                {
                    <!-- Book 1 For for loop -->
                    <div class="col-lg-4 col-md-6 col-sm-6 col-12">

                        <div class="book-info">

                            <!-- Book image -->
                            <div class="book-info-image">
                                <img src="@Url.Content(item.noteDetails.DisplayPicture)" alt="Book image">
                            </div>

                            <div class="book-info-content">

                                <!-- Book title -->
                                <div class="book-title">

                                    @*<h6><a href="/User/NoteDetails?id=@item.noteDetails.NoteID">@item.noteDetails.NoteTitle</a></h6>*@
                                    <h6><a href="/User/NoteDetails?noteName=@item.noteDetails.NoteTitle">@item.noteDetails.NoteTitle</a></h6>

                                </div>

                                @{
                                    NoteMarketPlaceDatabaseEntities db = new NoteMarketPlaceDatabaseEntities();

                                    var totalnote = db.NoteReviews.Where(m => m.NoteID == item.noteDetails.NoteID);
                                    int totalReview = db.NoteReviews.Where(m => m.NoteID == item.noteDetails.NoteID && m.Ratings != 0).Count();

                                    int num = 0;
                                    int totalRating = 0;

                                    if (totalnote != null)
                                    {

                                        num = totalnote.Where(m => m.Inappropriate == true).Count();

                                        var x = totalnote.Count();
                                        if (x != 0)
                                        {
                                            foreach (var p in totalnote)
                                            {
                                                totalRating = totalRating + Convert.ToInt32(p.Ratings);

                                            }
                                            totalRating = totalRating / x;
                                        }
                                        
                                    }

                                }

                                <!-- Sub Info -->
                                <div class="sub-info">

                                    <p class="sub-text"><img src="~/Content/images/search/Search/university.png" alt="university">@item.noteDetails.Institute,@item.countryDetails.CountryName</p>
                                    <p class="sub-text"><img src="~/Content/images/search/Search/pages.png" alt="pages">@item.noteDetails.Pages Pages</p>
                                    <p class="sub-text"><img src="~/Content/images/search/Search/date.png" alt="date">@item.noteDetails.PublishedDate.ToString("MMM dd yyyy")</p>
                                    <p class="inappropriate-mark"><img src="~/Content/images/search/Search/flag.png" alt="flag">@num Users marked this note inappropriate</p>

                                </div>



                                <!-- Ratings -->
                                <div class="ratings">

                                    <div class="rate">

                                        @{
                                            var j = totalRating;

                                            for (var z = 5; z >= 1; z--)
                                            {
                                                if (z > j)
                                                {
                                                    <label for="star1" title="text">@z stars</label>
                                                }
                                                else
                                                {
                                                    <label for="star1" title="text" style="color: #ffc700;">@z stars</label>
                                                }

                                            }
                                        }

                                    </div>

                                    <p class="sub-text">@totalReview reviews</p>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- Book 1 Ends -->
                }

                
            </div>

        </div>

    </div>

</section>




<!-- Pagination -->
<section id="pagination-style">
    <nav aria-label="Page navigation example">
        @{
            Double totalPage = ViewBag.PageTotal;

            <ul class="pagination justify-content-center">

                @if (ViewBag.PageNumber == 1)
                {
                    <li class="page-item disabled">
                        @Html.ActionLink("<", "SearchNotes", new { textbox = ViewBag.textboxSearch, typeOfNote = ViewBag.typesearch, categoryOfNote = ViewBag.categorySearch, instituteOfNote = ViewBag.instituteSearch, courseOfNote = ViewBag.courseSearch, countryNote = ViewBag.countrySearch, rateOfNote = ViewBag.rateSearch, PageNumber = ViewBag.PageNumber }, new { @class = "page-link" })
                    </li>

                }
                else
                {
                    <li class="page-item">
                        @Html.ActionLink("<", "SearchNotes", new { textbox = ViewBag.textboxSearch, typeOfNote = ViewBag.typesearch, categoryOfNote = ViewBag.categorySearch, instituteOfNote = ViewBag.instituteSearch, courseOfNote = ViewBag.courseSearch, countryNote = ViewBag.countrySearch, rateOfNote = ViewBag.rateSearch, PageNumber = ViewBag.PageNumber - 1 }, new { @class = "page-link" })
                    </li>
                }



                @for (int j = 1; j <= totalPage; j++)
                {

                    if (j == ViewBag.PageNumber)
                    {

                        <li class="page-item active">
                            @Html.ActionLink(j.ToString(), "SearchNotes", new { textbox = ViewBag.textboxSearch, typeOfNote = ViewBag.typesearch, categoryOfNote = ViewBag.categorySearch, instituteOfNote = ViewBag.instituteSearch, courseOfNote = ViewBag.courseSearch, countryNote = ViewBag.countrySearch, rateOfNote = ViewBag.rateSearch, PageNumber = j }, new { @class = "page-link" })
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            @Html.ActionLink(j.ToString(), "SearchNotes", new { textbox = ViewBag.textboxSearch, typeOfNote = ViewBag.typesearch, categoryOfNote = ViewBag.categorySearch, instituteOfNote = ViewBag.instituteSearch, courseOfNote = ViewBag.courseSearch, countryNote = ViewBag.countrySearch, rateOfNote = ViewBag.rateSearch, PageNumber = j }, new { @class = "page-link" })
                        </li>
                    }

                }

                @if (ViewBag.PageNumber == totalPage)
                {
                    <li class="page-item">
                        @Html.ActionLink(">", "SearchNotes", new { textbox = ViewBag.textboxSearch, typeOfNote = ViewBag.typesearch, categoryOfNote = ViewBag.categorySearch, instituteOfNote = ViewBag.instituteSearch, courseOfNote = ViewBag.courseSearch, countryNote = ViewBag.countrySearch, rateOfNote = ViewBag.rateSearch, PageNumber = ViewBag.PageNumber }, new { @class = "page-link" })

                    </li>
                }
                else
                {
                    <li class="page-item">
                        @Html.ActionLink(">", "SearchNotes", new { textbox = ViewBag.textboxSearch, typeOfNote = ViewBag.typesearch, categoryOfNote = ViewBag.categorySearch, instituteOfNote = ViewBag.instituteSearch, courseOfNote = ViewBag.courseSearch, countryNote = ViewBag.countrySearch, rateOfNote = ViewBag.rateSearch, PageNumber = ViewBag.PageNumber + 1 }, new { @class = "page-link" })

                    </li>
                }


            </ul>
        }
    </nav>
</section>

<script>
    function FilterOfNote() {
        //alert($(".typeDrop").val());
        $('form').submit();
    }
</script>







@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>*@

@*<script type="text/javascript">

        //$("body").on("change", ".universityDrop", function () {
        //    $(".universityDrop")[0].submit();
        //});

        //$("body").on("click", "universityDrop", function () {
        //    $('.universityDrop').attr('action', $(this).attr('href')).submit();
        //    return false;
        //});

        //var values = $("universityDrop :selected").val();

        $(document).ready(function () {
            $("input").change(function () {
                alert("Test");
            });
        });

    </script>
    
    *@



